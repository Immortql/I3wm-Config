#!/bin/bash

#################################
# Created by: Cadehlinha        #
# https://github.com/Cadehlinha #
#################################

# Check if feh is installed
command -v feh >/dev/null 2>&1 || { echo >&2 "feh is required but not installed. Aborting."; exit 1; }
command -v convert >/dev/null 2>&1 || { echo >&2 "ImageMagick is required but not installed. Aborting."; exit 1; }

# Check if folder path is provided
if [ $# -eq 0 ]; then
  echo "Usage: $0 <folder_path> [--resize] <feh_option>"
  echo "Available feh options: --bg-scale --bg-fill --bg-tile --bg-max --bg-center"
  exit 1
fi

folder_path="$1"
resize=false
feh_option="--bg-max"

# Check for optional --resize parameter
if [ "$2" == "--resize" ]; then
  resize=true
  shift
fi

# Check if folder exists
if [ ! -d "$folder_path" ]; then
  echo "Invalid folder path: $folder_path"
  exit 1
fi

# Check if feh option is provided
if [ -n "$2" ]; then
  feh_option="$2"
fi

# Get a random image from the folder
random_image=$(find "$folder_path" -type f -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | shuf -n 1)

# Check if no image files found
if [ -z "$random_image" ]; then
  echo "No image files found in the folder: $folder_path"
  exit 1
fi

# Apply the wallpaper using feh
feh "$feh_option" "$random_image"

# Resize the image if the --resize option is provided
if [ "$resize" = true ]; then
  temp_image="/tmp/wallpaper_temp.$(date +%s).jpg"
  screen_resolution=$(xrandr --query | awk '/\*/ {print $1}')
  convert "$random_image" -resize "$screen_resolution^" -gravity center -extent "$screen_resolution" "$temp_image"
  feh "$feh_option" "$temp_image"
  sleep 2  # Wait for 2 seconds to ensure the wallpaper is set before deleting the temporary image
  rm "$temp_image"
fi
